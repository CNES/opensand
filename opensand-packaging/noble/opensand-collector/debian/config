#!/bin/sh -e

# Source debconf library.
. /usr/share/debconf/confmodule


usage(){
    /bin/echo -e "Usage: $0 command\n\twith command: configure or reconfigure"
}

configure(){
    STATE=1
    while true; do
        case "$STATE" in
        1)
            db_beginblock
            db_input high opensand-collector/collector/stats/port || true
        ;;
        2)
            db_input high opensand-collector/collector/logs/port || true
            db_endblock
        ;;
        3)
            db_beginblock
            db_input high opensand-collector/elasticsearch/port || true
        ;;
        4)
            db_input high opensand-collector/influxdb/port || true
            db_endblock
        ;;
        5)
            db_beginblock
            db_input high opensand-collector/kibana/port || true
        ;;
        6)
            db_input high opensand-collector/chronograf/port || true
            db_endblock
        ;;
        *)
            # The default case catches when $STATE is greater than the
            # last implemented state, and breaks out of the loop. This
            # requires that states be numbered consecutively from 1
            # with no gaps, as the default case will also be entered
            # if there is a break in the numbering
            break # exits the enclosing "while" loop
        ;;
        esac

        if db_go; then
            STATE=$(($STATE + 1))
        else
            STATE=$(($STATE - 1))
        fi
    done

    if [ $STATE -eq 0 ]; then
        # The user has asked to back up from the first
        # question. This case is problematical. Regular
        # dpkg and apt package installation isnâ€™t capable
        # of backing up questions between packages as this
        # is written, so this will exit leaving the package
        # unconfigured - probably the best way to handle
        # the situation.
        exit 10
    fi
}

reset(){
    db_reset opensand-collector/collector/stats/port
    db_reset opensand-collector/collector/logs/port
    db_reset opensand-collector/elasticsearch/port
    db_reset opensand-collector/influxdb/port
    db_reset opensand-collector/kibana/port
    db_reset opensand-collector/chronograf/port
    db_reset opensand-collector/configured
}

unseen(){
    db_fset opensand-collector/collector/stats/port seen false
    db_fset opensand-collector/collector/logs/port seen false
    db_fset opensand-collector/elasticsearch/port seen false
    db_fset opensand-collector/influxdb/port seen false
    db_fset opensand-collector/kibana/port seen false
    db_fset opensand-collector/chronograf/port seen false
}

db_capb backup

if [ "$#" -gt 0 ]; then
    if [ "$1" = "configure" ]; then
        reset
        db_stop
    elif [ "$1" = "reconfigure" ]; then
        unseen
        db_set opensand-collector/configured true
        configure
    else
        usage
        exit 1
    fi
else
    usage
fi

exit 0
